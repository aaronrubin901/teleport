syntax = "proto3";
package proto;

import "google/protobuf/empty.proto";

// Heartbeat
message Heartbeat {
    // KeepAlive is the requested keep alive time
    int64 KeepAlive = 1;
    // LeaseID is a provided lease ID of the server
	int64 LeaseID = 2;    
    // Server is an optional server contents, sent
    // if the information has been updated server side
    Server Server = 3;
}

message Server {
}

message CertAuthority {
}

// Operation identifies type of operation
enum Operation {
    // PUT identifies created or updated object
    PUT    = 0;
    // DELETE identifies deleted object
    DELETE = 1;
}

// ClusterEvent returns cluster event
message ClusterEvent {
    // Operation identifies operation
    Operation Operation = 1;
    // Object contains the updated object
    oneof Object {
        // CertAuthority returns updated cert authority state
        CertAuthority CertAuthority = 2;
    }
}

service AuthService {
    // ConnectHeartbeat connects node or proxy to auth service
    // auth service accepts a stream of events,
    // nodes, send heartbeats and cluster updates back
    rpc ConnectHeartbeat(stream Heartbeat) returns (stream ClusterEvent) {
    }
}
